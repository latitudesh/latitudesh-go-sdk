// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ServerScheduleDeletionType string

const (
	ServerScheduleDeletionTypeScheduleDeletion ServerScheduleDeletionType = "schedule_deletion"
)

func (e ServerScheduleDeletionType) ToPointer() *ServerScheduleDeletionType {
	return &e
}
func (e *ServerScheduleDeletionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "schedule_deletion":
		*e = ServerScheduleDeletionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerScheduleDeletionType: %v", v)
	}
}

type ServerScheduleDeletionAttributes struct {
	ServerID            *string `json:"server_id,omitempty"`
	ScheduledDeletionAt *string `json:"scheduled_deletion_at,omitempty"`
}

func (o *ServerScheduleDeletionAttributes) GetServerID() *string {
	if o == nil {
		return nil
	}
	return o.ServerID
}

func (o *ServerScheduleDeletionAttributes) GetScheduledDeletionAt() *string {
	if o == nil {
		return nil
	}
	return o.ScheduledDeletionAt
}

type ServerScheduleDeletionData struct {
	ID         *string                           `json:"id,omitempty"`
	Type       *ServerScheduleDeletionType       `json:"type,omitempty"`
	Attributes *ServerScheduleDeletionAttributes `json:"attributes,omitempty"`
}

func (o *ServerScheduleDeletionData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ServerScheduleDeletionData) GetType() *ServerScheduleDeletionType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ServerScheduleDeletionData) GetAttributes() *ServerScheduleDeletionAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type ServerScheduleDeletion struct {
	Data *ServerScheduleDeletionData `json:"data,omitempty"`
}

func (o *ServerScheduleDeletion) GetData() *ServerScheduleDeletionData {
	if o == nil {
		return nil
	}
	return o.Data
}
