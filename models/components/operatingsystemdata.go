// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type OperatingSystemDataType string

const (
	OperatingSystemDataTypeOperatingSystems OperatingSystemDataType = "operating_systems"
)

func (e OperatingSystemDataType) ToPointer() *OperatingSystemDataType {
	return &e
}
func (e *OperatingSystemDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "operating_systems":
		*e = OperatingSystemDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperatingSystemDataType: %v", v)
	}
}

type Features struct {
	Raid     *bool `json:"raid,omitempty"`
	SSHKeys  *bool `json:"ssh_keys,omitempty"`
	UserData *bool `json:"user_data,omitempty"`
}

func (f *Features) GetRaid() *bool {
	if f == nil {
		return nil
	}
	return f.Raid
}

func (f *Features) GetSSHKeys() *bool {
	if f == nil {
		return nil
	}
	return f.SSHKeys
}

func (f *Features) GetUserData() *bool {
	if f == nil {
		return nil
	}
	return f.UserData
}

type OperatingSystemDataAttributes struct {
	Features        *Features `json:"features,omitempty"`
	Name            *string   `json:"name,omitempty"`
	Slug            *string   `json:"slug,omitempty"`
	Distro          *string   `json:"distro,omitempty"`
	User            *string   `json:"user,omitempty"`
	Version         *string   `json:"version,omitempty"`
	ProvisionableOn []string  `json:"provisionable_on,omitempty"`
}

func (o *OperatingSystemDataAttributes) GetFeatures() *Features {
	if o == nil {
		return nil
	}
	return o.Features
}

func (o *OperatingSystemDataAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *OperatingSystemDataAttributes) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *OperatingSystemDataAttributes) GetDistro() *string {
	if o == nil {
		return nil
	}
	return o.Distro
}

func (o *OperatingSystemDataAttributes) GetUser() *string {
	if o == nil {
		return nil
	}
	return o.User
}

func (o *OperatingSystemDataAttributes) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *OperatingSystemDataAttributes) GetProvisionableOn() []string {
	if o == nil {
		return nil
	}
	return o.ProvisionableOn
}

type OperatingSystemData struct {
	ID         *string                        `json:"id,omitempty"`
	Type       *OperatingSystemDataType       `json:"type,omitempty"`
	Attributes *OperatingSystemDataAttributes `json:"attributes,omitempty"`
}

func (o *OperatingSystemData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *OperatingSystemData) GetType() *OperatingSystemDataType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *OperatingSystemData) GetAttributes() *OperatingSystemDataAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
