// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type FirewallDataType string

const (
	FirewallDataTypeFirewalls FirewallDataType = "firewalls"
)

func (e FirewallDataType) ToPointer() *FirewallDataType {
	return &e
}
func (e *FirewallDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "firewalls":
		*e = FirewallDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FirewallDataType: %v", v)
	}
}

type Rules struct {
	// Source IP address, IP range in CIDR notation, or 'ANY' (e.g., "192.168.1.1", "192.168.1.0/24", "ANY")
	From *string `json:"from,omitempty"`
	// Destination IP address, IP range in CIDR notation, or 'ANY' (e.g., "192.168.1.1", "192.168.1.0/24", "ANY")
	To       *string `json:"to,omitempty"`
	Port     *string `json:"port,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
}

func (r *Rules) GetFrom() *string {
	if r == nil {
		return nil
	}
	return r.From
}

func (r *Rules) GetTo() *string {
	if r == nil {
		return nil
	}
	return r.To
}

func (r *Rules) GetPort() *string {
	if r == nil {
		return nil
	}
	return r.Port
}

func (r *Rules) GetProtocol() *string {
	if r == nil {
		return nil
	}
	return r.Protocol
}

type FirewallDataProject struct {
	ID   *string `json:"id,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Name *string `json:"name,omitempty"`
}

func (f *FirewallDataProject) GetID() *string {
	if f == nil {
		return nil
	}
	return f.ID
}

func (f *FirewallDataProject) GetSlug() *string {
	if f == nil {
		return nil
	}
	return f.Slug
}

func (f *FirewallDataProject) GetName() *string {
	if f == nil {
		return nil
	}
	return f.Name
}

type FirewallDataAttributes struct {
	Name    *string              `json:"name,omitempty"`
	Rules   []Rules              `json:"rules,omitempty"`
	Project *FirewallDataProject `json:"project,omitempty"`
}

func (f *FirewallDataAttributes) GetName() *string {
	if f == nil {
		return nil
	}
	return f.Name
}

func (f *FirewallDataAttributes) GetRules() []Rules {
	if f == nil {
		return nil
	}
	return f.Rules
}

func (f *FirewallDataAttributes) GetProject() *FirewallDataProject {
	if f == nil {
		return nil
	}
	return f.Project
}

type FirewallData struct {
	ID         *string                 `json:"id,omitempty"`
	Type       *FirewallDataType       `json:"type,omitempty"`
	Attributes *FirewallDataAttributes `json:"attributes,omitempty"`
}

func (f *FirewallData) GetID() *string {
	if f == nil {
		return nil
	}
	return f.ID
}

func (f *FirewallData) GetType() *FirewallDataType {
	if f == nil {
		return nil
	}
	return f.Type
}

func (f *FirewallData) GetAttributes() *FirewallDataAttributes {
	if f == nil {
		return nil
	}
	return f.Attributes
}
