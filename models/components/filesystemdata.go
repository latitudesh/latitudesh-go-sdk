// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"time"
)

type FilesystemDataType string

const (
	FilesystemDataTypeFilesystems FilesystemDataType = "filesystems"
)

func (e FilesystemDataType) ToPointer() *FilesystemDataType {
	return &e
}
func (e *FilesystemDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "filesystems":
		*e = FilesystemDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilesystemDataType: %v", v)
	}
}

type FilesystemDataProject struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

func (f *FilesystemDataProject) GetID() *string {
	if f == nil {
		return nil
	}
	return f.ID
}

func (f *FilesystemDataProject) GetName() *string {
	if f == nil {
		return nil
	}
	return f.Name
}

func (f *FilesystemDataProject) GetSlug() *string {
	if f == nil {
		return nil
	}
	return f.Slug
}

type FilesystemDataAttributes struct {
	Name      *string                `json:"name,omitempty"`
	SizeInGb  *int64                 `json:"size_in_gb,omitempty"`
	CreatedAt *time.Time             `json:"created_at,omitempty"`
	Project   *FilesystemDataProject `json:"project,omitempty"`
}

func (f FilesystemDataAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FilesystemDataAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (f *FilesystemDataAttributes) GetName() *string {
	if f == nil {
		return nil
	}
	return f.Name
}

func (f *FilesystemDataAttributes) GetSizeInGb() *int64 {
	if f == nil {
		return nil
	}
	return f.SizeInGb
}

func (f *FilesystemDataAttributes) GetCreatedAt() *time.Time {
	if f == nil {
		return nil
	}
	return f.CreatedAt
}

func (f *FilesystemDataAttributes) GetProject() *FilesystemDataProject {
	if f == nil {
		return nil
	}
	return f.Project
}

type FilesystemData struct {
	ID         *string                   `json:"id,omitempty"`
	Type       *FilesystemDataType       `json:"type,omitempty"`
	Attributes *FilesystemDataAttributes `json:"attributes,omitempty"`
}

func (f *FilesystemData) GetID() *string {
	if f == nil {
		return nil
	}
	return f.ID
}

func (f *FilesystemData) GetType() *FilesystemDataType {
	if f == nil {
		return nil
	}
	return f.Type
}

func (f *FilesystemData) GetAttributes() *FilesystemDataAttributes {
	if f == nil {
		return nil
	}
	return f.Attributes
}
