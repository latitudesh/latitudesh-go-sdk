// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Author struct {
	ID    *string `json:"id,omitempty"`
	Name  *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
}

func (o *Author) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Author) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Author) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

type EventsProject struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

func (o *EventsProject) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EventsProject) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EventsProject) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type EventsTeam struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

func (o *EventsTeam) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EventsTeam) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type Target struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

func (o *Target) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Target) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type EventsAttributes struct {
	Action    *string        `json:"action,omitempty"`
	CreatedAt *string        `json:"created_at,omitempty"`
	Author    *Author        `json:"author,omitempty"`
	Project   *EventsProject `json:"project,omitempty"`
	Team      *EventsTeam    `json:"team,omitempty"`
	Target    *Target        `json:"target,omitempty"`
}

func (o *EventsAttributes) GetAction() *string {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *EventsAttributes) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *EventsAttributes) GetAuthor() *Author {
	if o == nil {
		return nil
	}
	return o.Author
}

func (o *EventsAttributes) GetProject() *EventsProject {
	if o == nil {
		return nil
	}
	return o.Project
}

func (o *EventsAttributes) GetTeam() *EventsTeam {
	if o == nil {
		return nil
	}
	return o.Team
}

func (o *EventsAttributes) GetTarget() *Target {
	if o == nil {
		return nil
	}
	return o.Target
}

type Events struct {
	ID         *string           `json:"id,omitempty"`
	Attributes *EventsAttributes `json:"attributes,omitempty"`
}

func (o *Events) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Events) GetAttributes() *EventsAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
