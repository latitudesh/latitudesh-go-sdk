// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type TrafficType string

const (
	TrafficTypeTraffic TrafficType = "traffic"
)

func (e TrafficType) ToPointer() *TrafficType {
	return &e
}
func (e *TrafficType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "traffic":
		*e = TrafficType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrafficType: %v", v)
	}
}

type TrafficDataData struct {
	// The datetime of the day
	Date *string `json:"date,omitempty"`
	// Value in GB
	InboundGb *int64 `json:"inbound_gb,omitempty"`
	// Value in GB
	OutboundGb *int64 `json:"outbound_gb,omitempty"`
	// Value in MBps
	AvgOutboundSpeedMbps *float64 `json:"avg_outbound_speed_mbps,omitempty"`
	// Value in MBps
	AvgInboundSpeedMbps *float64 `json:"avg_inbound_speed_mbps,omitempty"`
}

func (t *TrafficDataData) GetDate() *string {
	if t == nil {
		return nil
	}
	return t.Date
}

func (t *TrafficDataData) GetInboundGb() *int64 {
	if t == nil {
		return nil
	}
	return t.InboundGb
}

func (t *TrafficDataData) GetOutboundGb() *int64 {
	if t == nil {
		return nil
	}
	return t.OutboundGb
}

func (t *TrafficDataData) GetAvgOutboundSpeedMbps() *float64 {
	if t == nil {
		return nil
	}
	return t.AvgOutboundSpeedMbps
}

func (t *TrafficDataData) GetAvgInboundSpeedMbps() *float64 {
	if t == nil {
		return nil
	}
	return t.AvgInboundSpeedMbps
}

type TrafficRegions struct {
	RegionSlug *string `json:"region_slug,omitempty"`
	// Value in GB
	TotalInboundGb *int64 `json:"total_inbound_gb,omitempty"`
	// Value in GB
	TotalOutboundGb *int64 `json:"total_outbound_gb,omitempty"`
	// Value in MBps
	TotalInbound95thPercentileMbps *float64 `json:"total_inbound_95th_percentile_mbps,omitempty"`
	// Value in MBps
	TotalOutbound95thPercentileMbps *float64          `json:"total_outbound_95th_percentile_mbps,omitempty"`
	Data                            []TrafficDataData `json:"data,omitempty"`
}

func (t *TrafficRegions) GetRegionSlug() *string {
	if t == nil {
		return nil
	}
	return t.RegionSlug
}

func (t *TrafficRegions) GetTotalInboundGb() *int64 {
	if t == nil {
		return nil
	}
	return t.TotalInboundGb
}

func (t *TrafficRegions) GetTotalOutboundGb() *int64 {
	if t == nil {
		return nil
	}
	return t.TotalOutboundGb
}

func (t *TrafficRegions) GetTotalInbound95thPercentileMbps() *float64 {
	if t == nil {
		return nil
	}
	return t.TotalInbound95thPercentileMbps
}

func (t *TrafficRegions) GetTotalOutbound95thPercentileMbps() *float64 {
	if t == nil {
		return nil
	}
	return t.TotalOutbound95thPercentileMbps
}

func (t *TrafficRegions) GetData() []TrafficDataData {
	if t == nil {
		return nil
	}
	return t.Data
}

type TrafficAttributes struct {
	// The start timestamp. Must be a unix timestamp
	FromDate *int64 `json:"from_date,omitempty"`
	// The end timestamp. Must be a unix timestamp
	ToDate  *int64           `json:"to_date,omitempty"`
	Regions []TrafficRegions `json:"regions,omitempty"`
	// Value in GB
	TotalInboundGb *int64 `json:"total_inbound_gb,omitempty"`
	// Value in GB
	TotalOutboundGb *int64 `json:"total_outbound_gb,omitempty"`
	// Value in MBps
	TotalInbound95thPercentileMbps *float64 `json:"total_inbound_95th_percentile_mbps,omitempty"`
	// Value in MBps
	TotalOutbound95thPercentileMbps *float64 `json:"total_outbound_95th_percentile_mbps,omitempty"`
}

func (t *TrafficAttributes) GetFromDate() *int64 {
	if t == nil {
		return nil
	}
	return t.FromDate
}

func (t *TrafficAttributes) GetToDate() *int64 {
	if t == nil {
		return nil
	}
	return t.ToDate
}

func (t *TrafficAttributes) GetRegions() []TrafficRegions {
	if t == nil {
		return nil
	}
	return t.Regions
}

func (t *TrafficAttributes) GetTotalInboundGb() *int64 {
	if t == nil {
		return nil
	}
	return t.TotalInboundGb
}

func (t *TrafficAttributes) GetTotalOutboundGb() *int64 {
	if t == nil {
		return nil
	}
	return t.TotalOutboundGb
}

func (t *TrafficAttributes) GetTotalInbound95thPercentileMbps() *float64 {
	if t == nil {
		return nil
	}
	return t.TotalInbound95thPercentileMbps
}

func (t *TrafficAttributes) GetTotalOutbound95thPercentileMbps() *float64 {
	if t == nil {
		return nil
	}
	return t.TotalOutbound95thPercentileMbps
}

type TrafficData struct {
	ID         *string            `json:"id,omitempty"`
	Type       *TrafficType       `json:"type,omitempty"`
	Attributes *TrafficAttributes `json:"attributes,omitempty"`
}

func (t *TrafficData) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *TrafficData) GetType() *TrafficType {
	if t == nil {
		return nil
	}
	return t.Type
}

func (t *TrafficData) GetAttributes() *TrafficAttributes {
	if t == nil {
		return nil
	}
	return t.Attributes
}

type Traffic struct {
	Data *TrafficData `json:"data,omitempty"`
}

func (t *Traffic) GetData() *TrafficData {
	if t == nil {
		return nil
	}
	return t.Data
}
