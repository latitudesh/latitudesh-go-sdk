// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CustomTagType string

const (
	CustomTagTypeTags CustomTagType = "tags"
)

func (e CustomTagType) ToPointer() *CustomTagType {
	return &e
}
func (e *CustomTagType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tags":
		*e = CustomTagType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomTagType: %v", v)
	}
}

type CustomTagAttributes struct {
	// Name of the Tag
	Name *string `json:"name,omitempty"`
	// Slug of the Tag
	Slug *string `json:"slug,omitempty"`
	// Description of the Tag
	Description *string `json:"description,omitempty"`
	// Color of the Tag
	Color *string      `json:"color,omitempty"`
	Team  *TeamInclude `json:"team,omitempty"`
}

func (o *CustomTagAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CustomTagAttributes) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CustomTagAttributes) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CustomTagAttributes) GetColor() *string {
	if o == nil {
		return nil
	}
	return o.Color
}

func (o *CustomTagAttributes) GetTeam() *TeamInclude {
	if o == nil {
		return nil
	}
	return o.Team
}

type CustomTag struct {
	ID         *string              `json:"id,omitempty"`
	Type       *CustomTagType       `json:"type,omitempty"`
	Attributes *CustomTagAttributes `json:"attributes,omitempty"`
}

func (o *CustomTag) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CustomTag) GetType() *CustomTagType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *CustomTag) GetAttributes() *CustomTagAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
