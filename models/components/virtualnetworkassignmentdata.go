// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VirtualNetworkAssignmentDataType string

const (
	VirtualNetworkAssignmentDataTypeVirtualNetworkAssignment VirtualNetworkAssignmentDataType = "virtual_network_assignment"
)

func (e VirtualNetworkAssignmentDataType) ToPointer() *VirtualNetworkAssignmentDataType {
	return &e
}
func (e *VirtualNetworkAssignmentDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual_network_assignment":
		*e = VirtualNetworkAssignmentDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualNetworkAssignmentDataType: %v", v)
	}
}

type VirtualNetworkAssignmentDataServer struct {
	ID       *string `json:"id,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Label    *string `json:"label,omitempty"`
	Locked   *bool   `json:"locked,omitempty"`
	Status   *string `json:"status,omitempty"`
}

func (o *VirtualNetworkAssignmentDataServer) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualNetworkAssignmentDataServer) GetHostname() *string {
	if o == nil {
		return nil
	}
	return o.Hostname
}

func (o *VirtualNetworkAssignmentDataServer) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *VirtualNetworkAssignmentDataServer) GetLocked() *bool {
	if o == nil {
		return nil
	}
	return o.Locked
}

func (o *VirtualNetworkAssignmentDataServer) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

type VirtualNetworkAssignmentDataAttributes struct {
	VirtualNetworkID *string                             `json:"virtual_network_id,omitempty"`
	Vid              *int64                              `json:"vid,omitempty"`
	ServerID         *string                             `json:"server_id,omitempty"`
	Description      *string                             `json:"description,omitempty"`
	Status           *string                             `json:"status,omitempty"`
	Server           *VirtualNetworkAssignmentDataServer `json:"server,omitempty"`
}

func (o *VirtualNetworkAssignmentDataAttributes) GetVirtualNetworkID() *string {
	if o == nil {
		return nil
	}
	return o.VirtualNetworkID
}

func (o *VirtualNetworkAssignmentDataAttributes) GetVid() *int64 {
	if o == nil {
		return nil
	}
	return o.Vid
}

func (o *VirtualNetworkAssignmentDataAttributes) GetServerID() *string {
	if o == nil {
		return nil
	}
	return o.ServerID
}

func (o *VirtualNetworkAssignmentDataAttributes) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *VirtualNetworkAssignmentDataAttributes) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *VirtualNetworkAssignmentDataAttributes) GetServer() *VirtualNetworkAssignmentDataServer {
	if o == nil {
		return nil
	}
	return o.Server
}

type VirtualNetworkAssignmentData struct {
	ID         *string                                 `json:"id,omitempty"`
	Type       *VirtualNetworkAssignmentDataType       `json:"type,omitempty"`
	Attributes *VirtualNetworkAssignmentDataAttributes `json:"attributes,omitempty"`
}

func (o *VirtualNetworkAssignmentData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualNetworkAssignmentData) GetType() *VirtualNetworkAssignmentDataType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *VirtualNetworkAssignmentData) GetAttributes() *VirtualNetworkAssignmentDataAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
