// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"time"
)

type Type string

const (
	TypeAPIKeys Type = "api_keys"
)

func (e Type) ToPointer() *Type {
	return &e
}
func (e *Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_keys":
		*e = Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Type: %v", v)
	}
}

// APIKeyUser - The owner of the API Key
type APIKeyUser struct {
	ID    *string `json:"id,omitempty"`
	Email *string `json:"email,omitempty"`
}

func (a *APIKeyUser) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *APIKeyUser) GetEmail() *string {
	if a == nil {
		return nil
	}
	return a.Email
}

type Attributes struct {
	// Name of the API Key
	Name *string `json:"name,omitempty"`
	// The API version associated with this API Key
	APIVersion *string `json:"api_version,omitempty"`
	// The last 5 characters of the token created for this API Key
	TokenLastSlice *string `json:"token_last_slice,omitempty"`
	// The last time a request was made to the API using this API Key
	LastUsedAt *time.Time `json:"last_used_at,omitempty"`
	// The owner of the API Key
	User *APIKeyUser `json:"user,omitempty"`
	// The time when the API Key was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The time when the API Key was updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (a Attributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Attributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *Attributes) GetName() *string {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *Attributes) GetAPIVersion() *string {
	if a == nil {
		return nil
	}
	return a.APIVersion
}

func (a *Attributes) GetTokenLastSlice() *string {
	if a == nil {
		return nil
	}
	return a.TokenLastSlice
}

func (a *Attributes) GetLastUsedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastUsedAt
}

func (a *Attributes) GetUser() *APIKeyUser {
	if a == nil {
		return nil
	}
	return a.User
}

func (a *Attributes) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *Attributes) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}

type APIKey struct {
	ID         *string     `json:"id,omitempty"`
	Type       *Type       `json:"type,omitempty"`
	Attributes *Attributes `json:"attributes,omitempty"`
}

func (a *APIKey) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *APIKey) GetType() *Type {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *APIKey) GetAttributes() *Attributes {
	if a == nil {
		return nil
	}
	return a.Attributes
}
