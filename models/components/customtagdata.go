// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CustomTagDataType string

const (
	CustomTagDataTypeTags CustomTagDataType = "tags"
)

func (e CustomTagDataType) ToPointer() *CustomTagDataType {
	return &e
}
func (e *CustomTagDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tags":
		*e = CustomTagDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomTagDataType: %v", v)
	}
}

type CustomTagDataAttributes struct {
	// Name of the Tag
	Name *string `json:"name,omitempty"`
	// Slug of the Tag
	Slug *string `json:"slug,omitempty"`
	// Description of the Tag
	Description *string `json:"description,omitempty"`
	// Color of the Tag
	Color *string      `json:"color,omitempty"`
	Team  *TeamInclude `json:"team,omitempty"`
}

func (o *CustomTagDataAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CustomTagDataAttributes) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CustomTagDataAttributes) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CustomTagDataAttributes) GetColor() *string {
	if o == nil {
		return nil
	}
	return o.Color
}

func (o *CustomTagDataAttributes) GetTeam() *TeamInclude {
	if o == nil {
		return nil
	}
	return o.Team
}

type CustomTagData struct {
	ID         *string                  `json:"id,omitempty"`
	Type       *CustomTagDataType       `json:"type,omitempty"`
	Attributes *CustomTagDataAttributes `json:"attributes,omitempty"`
}

func (o *CustomTagData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CustomTagData) GetType() *CustomTagDataType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *CustomTagData) GetAttributes() *CustomTagDataAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
