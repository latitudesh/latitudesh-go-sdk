// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ServerActionType string

const (
	ServerActionTypeActions ServerActionType = "actions"
)

func (e ServerActionType) ToPointer() *ServerActionType {
	return &e
}
func (e *ServerActionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "actions":
		*e = ServerActionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerActionType: %v", v)
	}
}

type ServerActionAttributes struct {
	Status *string `json:"status,omitempty"`
}

func (s *ServerActionAttributes) GetStatus() *string {
	if s == nil {
		return nil
	}
	return s.Status
}

type ServerActionData struct {
	ID         *string                 `json:"id,omitempty"`
	Type       *ServerActionType       `json:"type,omitempty"`
	Attributes *ServerActionAttributes `json:"attributes,omitempty"`
}

func (s *ServerActionData) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ServerActionData) GetType() *ServerActionType {
	if s == nil {
		return nil
	}
	return s.Type
}

func (s *ServerActionData) GetAttributes() *ServerActionAttributes {
	if s == nil {
		return nil
	}
	return s.Attributes
}

type ServerActionMeta struct {
}

type ServerAction struct {
	Data *ServerActionData `json:"data,omitempty"`
	Meta *ServerActionMeta `json:"meta,omitempty"`
}

func (s *ServerAction) GetData() *ServerActionData {
	if s == nil {
		return nil
	}
	return s.Data
}

func (s *ServerAction) GetMeta() *ServerActionMeta {
	if s == nil {
		return nil
	}
	return s.Meta
}
