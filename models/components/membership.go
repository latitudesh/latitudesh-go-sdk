// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"time"
)

type MembershipRole string

const (
	MembershipRoleOwner         MembershipRole = "owner"
	MembershipRoleAdministrator MembershipRole = "administrator"
	MembershipRoleCollaborator  MembershipRole = "collaborator"
	MembershipRoleBilling       MembershipRole = "billing"
)

func (e MembershipRole) ToPointer() *MembershipRole {
	return &e
}
func (e *MembershipRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "owner":
		fallthrough
	case "administrator":
		fallthrough
	case "collaborator":
		fallthrough
	case "billing":
		*e = MembershipRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipRole: %v", v)
	}
}

type MembershipAttributes struct {
	FirstName   *string         `json:"first_name,omitempty"`
	LastName    *string         `json:"last_name,omitempty"`
	Email       *string         `json:"email,omitempty"`
	Role        *MembershipRole `json:"role,omitempty"`
	MfaEnabled  *bool           `json:"mfa_enabled,omitempty"`
	CreatedAt   *time.Time      `json:"created_at,omitempty"`
	UpdatedAt   *time.Time      `json:"updated_at,omitempty"`
	LastLoginAt *time.Time      `json:"last_login_at,omitempty"`
}

func (m MembershipAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MembershipAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MembershipAttributes) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *MembershipAttributes) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *MembershipAttributes) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *MembershipAttributes) GetRole() *MembershipRole {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *MembershipAttributes) GetMfaEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.MfaEnabled
}

func (o *MembershipAttributes) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *MembershipAttributes) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *MembershipAttributes) GetLastLoginAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastLoginAt
}

type MembershipData struct {
	ID         *string               `json:"id,omitempty"`
	Attributes *MembershipAttributes `json:"attributes,omitempty"`
}

func (o *MembershipData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MembershipData) GetAttributes() *MembershipAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type Membership struct {
	Data *MembershipData `json:"data,omitempty"`
}

func (o *Membership) GetData() *MembershipData {
	if o == nil {
		return nil
	}
	return o.Data
}
