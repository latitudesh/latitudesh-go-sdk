// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type StoragePlanDataType string

const (
	StoragePlanDataTypeStoragePlans StoragePlanDataType = "storage_plans"
)

func (e StoragePlanDataType) ToPointer() *StoragePlanDataType {
	return &e
}
func (e *StoragePlanDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "storage_plans":
		*e = StoragePlanDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StoragePlanDataType: %v", v)
	}
}

type StoragePlanDataPricing struct {
	Month *float64 `json:"month,omitempty"`
}

func (s *StoragePlanDataPricing) GetMonth() *float64 {
	if s == nil {
		return nil
	}
	return s.Month
}

type StoragePlanDataAttributes struct {
	Name      *string                 `json:"name,omitempty"`
	Locations []string                `json:"locations,omitempty"`
	Pricing   *StoragePlanDataPricing `json:"pricing,omitempty"`
}

func (s *StoragePlanDataAttributes) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *StoragePlanDataAttributes) GetLocations() []string {
	if s == nil {
		return nil
	}
	return s.Locations
}

func (s *StoragePlanDataAttributes) GetPricing() *StoragePlanDataPricing {
	if s == nil {
		return nil
	}
	return s.Pricing
}

type StoragePlanData struct {
	ID         *string                    `json:"id,omitempty"`
	Type       *StoragePlanDataType       `json:"type,omitempty"`
	Attributes *StoragePlanDataAttributes `json:"attributes,omitempty"`
}

func (s *StoragePlanData) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *StoragePlanData) GetType() *StoragePlanDataType {
	if s == nil {
		return nil
	}
	return s.Type
}

func (s *StoragePlanData) GetAttributes() *StoragePlanDataAttributes {
	if s == nil {
		return nil
	}
	return s.Attributes
}
