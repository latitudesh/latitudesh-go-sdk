// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type RoleDataType string

const (
	RoleDataTypeRoles RoleDataType = "roles"
)

func (e RoleDataType) ToPointer() *RoleDataType {
	return &e
}
func (e *RoleDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "roles":
		*e = RoleDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RoleDataType: %v", v)
	}
}

type RoleDataAttributes struct {
	// Name of the Role
	Name *string `json:"name,omitempty"`
}

func (r *RoleDataAttributes) GetName() *string {
	if r == nil {
		return nil
	}
	return r.Name
}

type RoleData struct {
	ID         *string             `json:"id,omitempty"`
	Type       *RoleDataType       `json:"type,omitempty"`
	Attributes *RoleDataAttributes `json:"attributes,omitempty"`
}

func (r *RoleData) GetID() *string {
	if r == nil {
		return nil
	}
	return r.ID
}

func (r *RoleData) GetType() *RoleDataType {
	if r == nil {
		return nil
	}
	return r.Type
}

func (r *RoleData) GetAttributes() *RoleDataAttributes {
	if r == nil {
		return nil
	}
	return r.Attributes
}
