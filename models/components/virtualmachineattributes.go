// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VirtualMachineAttributesType string

const (
	VirtualMachineAttributesTypeVirtualMachines VirtualMachineAttributesType = "virtual_machines"
)

func (e VirtualMachineAttributesType) ToPointer() *VirtualMachineAttributesType {
	return &e
}
func (e *VirtualMachineAttributesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual_machines":
		*e = VirtualMachineAttributesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMachineAttributesType: %v", v)
	}
}

type VirtualMachineAttributesStatus string

const (
	VirtualMachineAttributesStatusRunning            VirtualMachineAttributesStatus = "Running"
	VirtualMachineAttributesStatusConfiguringNetwork VirtualMachineAttributesStatus = "Configuring network"
	VirtualMachineAttributesStatusStarting           VirtualMachineAttributesStatus = "Starting"
	VirtualMachineAttributesStatusScheduling         VirtualMachineAttributesStatus = "Scheduling"
	VirtualMachineAttributesStatusScheduled          VirtualMachineAttributesStatus = "Scheduled"
)

func (e VirtualMachineAttributesStatus) ToPointer() *VirtualMachineAttributesStatus {
	return &e
}
func (e *VirtualMachineAttributesStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Running":
		fallthrough
	case "Configuring network":
		fallthrough
	case "Starting":
		fallthrough
	case "Scheduling":
		fallthrough
	case "Scheduled":
		*e = VirtualMachineAttributesStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMachineAttributesStatus: %v", v)
	}
}

type Credentials struct {
	Username *string `json:"username,omitempty"`
	Host     *string `json:"host,omitempty"`
	Password *string `json:"password,omitempty"`
}

func (o *Credentials) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *Credentials) GetHost() *string {
	if o == nil {
		return nil
	}
	return o.Host
}

func (o *Credentials) GetPassword() *string {
	if o == nil {
		return nil
	}
	return o.Password
}

type VirtualMachineAttributesPlan struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

func (o *VirtualMachineAttributesPlan) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualMachineAttributesPlan) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type VirtualMachineAttributesSpecs struct {
	Vcpu    *int64  `json:"vcpu,omitempty"`
	RAM     *string `json:"ram,omitempty"`
	Storage *string `json:"storage,omitempty"`
	Nic     *string `json:"nic,omitempty"`
	Gpu     *string `json:"gpu,omitempty"`
}

func (o *VirtualMachineAttributesSpecs) GetVcpu() *int64 {
	if o == nil {
		return nil
	}
	return o.Vcpu
}

func (o *VirtualMachineAttributesSpecs) GetRAM() *string {
	if o == nil {
		return nil
	}
	return o.RAM
}

func (o *VirtualMachineAttributesSpecs) GetStorage() *string {
	if o == nil {
		return nil
	}
	return o.Storage
}

func (o *VirtualMachineAttributesSpecs) GetNic() *string {
	if o == nil {
		return nil
	}
	return o.Nic
}

func (o *VirtualMachineAttributesSpecs) GetGpu() *string {
	if o == nil {
		return nil
	}
	return o.Gpu
}

type VirtualMachineAttributesAttributes struct {
	Name            *string                         `json:"name,omitempty"`
	CreatedAt       *string                         `json:"created_at,omitempty"`
	Status          *VirtualMachineAttributesStatus `json:"status,omitempty"`
	OperatingSystem *string                         `json:"operating_system,omitempty"`
	Credentials     *Credentials                    `json:"credentials,omitempty"`
	Plan            *VirtualMachineAttributesPlan   `json:"plan,omitempty"`
	Specs           *VirtualMachineAttributesSpecs  `json:"specs,omitempty"`
	Team            *TeamInclude                    `json:"team,omitempty"`
	Project         *ProjectInclude                 `json:"project,omitempty"`
}

func (o *VirtualMachineAttributesAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *VirtualMachineAttributesAttributes) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *VirtualMachineAttributesAttributes) GetStatus() *VirtualMachineAttributesStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *VirtualMachineAttributesAttributes) GetOperatingSystem() *string {
	if o == nil {
		return nil
	}
	return o.OperatingSystem
}

func (o *VirtualMachineAttributesAttributes) GetCredentials() *Credentials {
	if o == nil {
		return nil
	}
	return o.Credentials
}

func (o *VirtualMachineAttributesAttributes) GetPlan() *VirtualMachineAttributesPlan {
	if o == nil {
		return nil
	}
	return o.Plan
}

func (o *VirtualMachineAttributesAttributes) GetSpecs() *VirtualMachineAttributesSpecs {
	if o == nil {
		return nil
	}
	return o.Specs
}

func (o *VirtualMachineAttributesAttributes) GetTeam() *TeamInclude {
	if o == nil {
		return nil
	}
	return o.Team
}

func (o *VirtualMachineAttributesAttributes) GetProject() *ProjectInclude {
	if o == nil {
		return nil
	}
	return o.Project
}

type VirtualMachineAttributes struct {
	ID         *string                             `json:"id,omitempty"`
	Type       *VirtualMachineAttributesType       `json:"type,omitempty"`
	Attributes *VirtualMachineAttributesAttributes `json:"attributes,omitempty"`
}

func (o *VirtualMachineAttributes) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualMachineAttributes) GetType() *VirtualMachineAttributesType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *VirtualMachineAttributes) GetAttributes() *VirtualMachineAttributesAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
