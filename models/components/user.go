// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"time"
)

type UserRole struct {
	ID        *string    `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (u UserRole) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UserRole) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UserRole) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UserRole) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UserRole) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UserRole) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type UserAttributes struct {
	FirstName              *string       `json:"first_name,omitempty"`
	LastName               *string       `json:"last_name,omitempty"`
	Email                  *string       `json:"email,omitempty"`
	AuthenticationFactorID *string       `json:"authentication_factor_id,omitempty"`
	Role                   *UserRole     `json:"role,omitempty"`
	Teams                  []TeamInclude `json:"teams,omitempty"`
}

func (o *UserAttributes) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *UserAttributes) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *UserAttributes) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *UserAttributes) GetAuthenticationFactorID() *string {
	if o == nil {
		return nil
	}
	return o.AuthenticationFactorID
}

func (o *UserAttributes) GetRole() *UserRole {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *UserAttributes) GetTeams() []TeamInclude {
	if o == nil {
		return nil
	}
	return o.Teams
}

type User struct {
	ID         *string         `json:"id,omitempty"`
	Attributes *UserAttributes `json:"attributes,omitempty"`
}

func (o *User) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *User) GetAttributes() *UserAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
