// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type TrafficQuotaType string

const (
	TrafficQuotaTypeTrafficQuota TrafficQuotaType = "traffic_quota"
)

func (e TrafficQuotaType) ToPointer() *TrafficQuotaType {
	return &e
}
func (e *TrafficQuotaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "traffic_quota":
		*e = TrafficQuotaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrafficQuotaType: %v", v)
	}
}

type QuotaInTb struct {
	Granted    *int64 `json:"granted,omitempty"`
	Additional *int64 `json:"additional,omitempty"`
	Total      *int64 `json:"total,omitempty"`
}

func (o *QuotaInTb) GetGranted() *int64 {
	if o == nil {
		return nil
	}
	return o.Granted
}

func (o *QuotaInTb) GetAdditional() *int64 {
	if o == nil {
		return nil
	}
	return o.Additional
}

func (o *QuotaInTb) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type QuotaInMbps struct {
	Granted    *int64 `json:"granted,omitempty"`
	Additional *int64 `json:"additional,omitempty"`
	Total      *int64 `json:"total,omitempty"`
}

func (o *QuotaInMbps) GetGranted() *int64 {
	if o == nil {
		return nil
	}
	return o.Granted
}

func (o *QuotaInMbps) GetAdditional() *int64 {
	if o == nil {
		return nil
	}
	return o.Additional
}

func (o *QuotaInMbps) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type QuotaPerRegion struct {
	RegionID    *string      `json:"region_id,omitempty"`
	RegionSlug  *string      `json:"region_slug,omitempty"`
	QuotaInTb   *QuotaInTb   `json:"quota_in_tb,omitempty"`
	QuotaInMbps *QuotaInMbps `json:"quota_in_mbps,omitempty"`
}

func (o *QuotaPerRegion) GetRegionID() *string {
	if o == nil {
		return nil
	}
	return o.RegionID
}

func (o *QuotaPerRegion) GetRegionSlug() *string {
	if o == nil {
		return nil
	}
	return o.RegionSlug
}

func (o *QuotaPerRegion) GetQuotaInTb() *QuotaInTb {
	if o == nil {
		return nil
	}
	return o.QuotaInTb
}

func (o *QuotaPerRegion) GetQuotaInMbps() *QuotaInMbps {
	if o == nil {
		return nil
	}
	return o.QuotaInMbps
}

type QuotaPerProject struct {
	ProjectID      *string          `json:"project_id,omitempty"`
	ProjectSlug    *string          `json:"project_slug,omitempty"`
	Price          *int64           `json:"price,omitempty"`
	BillingMethod  *string          `json:"billing_method,omitempty"`
	QuotaPerRegion []QuotaPerRegion `json:"quota_per_region,omitempty"`
}

func (o *QuotaPerProject) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

func (o *QuotaPerProject) GetProjectSlug() *string {
	if o == nil {
		return nil
	}
	return o.ProjectSlug
}

func (o *QuotaPerProject) GetPrice() *int64 {
	if o == nil {
		return nil
	}
	return o.Price
}

func (o *QuotaPerProject) GetBillingMethod() *string {
	if o == nil {
		return nil
	}
	return o.BillingMethod
}

func (o *QuotaPerProject) GetQuotaPerRegion() []QuotaPerRegion {
	if o == nil {
		return nil
	}
	return o.QuotaPerRegion
}

type TrafficQuotaAttributes struct {
	QuotaPerProject []QuotaPerProject `json:"quota_per_project,omitempty"`
}

func (o *TrafficQuotaAttributes) GetQuotaPerProject() []QuotaPerProject {
	if o == nil {
		return nil
	}
	return o.QuotaPerProject
}

type TrafficQuotaData struct {
	ID         *string                 `json:"id,omitempty"`
	Type       *TrafficQuotaType       `json:"type,omitempty"`
	Attributes *TrafficQuotaAttributes `json:"attributes,omitempty"`
}

func (o *TrafficQuotaData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TrafficQuotaData) GetType() *TrafficQuotaType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *TrafficQuotaData) GetAttributes() *TrafficQuotaAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type TrafficQuota struct {
	Data *TrafficQuotaData `json:"data,omitempty"`
}

func (o *TrafficQuota) GetData() *TrafficQuotaData {
	if o == nil {
		return nil
	}
	return o.Data
}
