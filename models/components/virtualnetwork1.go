// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VirtualNetworkType string

const (
	VirtualNetworkTypeVirtualNetworks VirtualNetworkType = "virtual_networks"
)

func (e VirtualNetworkType) ToPointer() *VirtualNetworkType {
	return &e
}
func (e *VirtualNetworkType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual_networks":
		*e = VirtualNetworkType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualNetworkType: %v", v)
	}
}

type VirtualNetworkSite struct {
	ID       *string `json:"id,omitempty"`
	Facility *string `json:"facility,omitempty"`
	Name     *string `json:"name,omitempty"`
	Slug     *string `json:"slug,omitempty"`
}

func (o *VirtualNetworkSite) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualNetworkSite) GetFacility() *string {
	if o == nil {
		return nil
	}
	return o.Facility
}

func (o *VirtualNetworkSite) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *VirtualNetworkSite) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type VirtualNetworkRegion struct {
	City    *string             `json:"city,omitempty"`
	Country *string             `json:"country,omitempty"`
	Site    *VirtualNetworkSite `json:"site,omitempty"`
}

func (o *VirtualNetworkRegion) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *VirtualNetworkRegion) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *VirtualNetworkRegion) GetSite() *VirtualNetworkSite {
	if o == nil {
		return nil
	}
	return o.Site
}

type VirtualNetworkAttributes struct {
	// vlan ID of the virtual network
	Vid *int64 `json:"vid,omitempty"`
	// Name of the virtual network
	Name *string `json:"name,omitempty"`
	// Description of the virtual network
	Description *string               `json:"description,omitempty"`
	Region      *VirtualNetworkRegion `json:"region,omitempty"`
	// Amount of devices assigned to the virtual network
	AssignmentsCount *int64 `json:"assignments_count,omitempty"`
}

func (o *VirtualNetworkAttributes) GetVid() *int64 {
	if o == nil {
		return nil
	}
	return o.Vid
}

func (o *VirtualNetworkAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *VirtualNetworkAttributes) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *VirtualNetworkAttributes) GetRegion() *VirtualNetworkRegion {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *VirtualNetworkAttributes) GetAssignmentsCount() *int64 {
	if o == nil {
		return nil
	}
	return o.AssignmentsCount
}

type VirtualNetwork1 struct {
	ID         *string                   `json:"id,omitempty"`
	Type       *VirtualNetworkType       `json:"type,omitempty"`
	Attributes *VirtualNetworkAttributes `json:"attributes,omitempty"`
}

func (o *VirtualNetwork1) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualNetwork1) GetType() *VirtualNetworkType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *VirtualNetwork1) GetAttributes() *VirtualNetworkAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
