// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type BandwidthPlanType string

const (
	BandwidthPlanTypeBandwidthPlan BandwidthPlanType = "bandwidth_plan"
)

func (e BandwidthPlanType) ToPointer() *BandwidthPlanType {
	return &e
}
func (e *BandwidthPlanType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bandwidth_plan":
		*e = BandwidthPlanType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BandwidthPlanType: %v", v)
	}
}

type Usd struct {
	Monthly *int64 `json:"monthly,omitempty"`
	Hourly  *int64 `json:"hourly,omitempty"`
}

func (o *Usd) GetMonthly() *int64 {
	if o == nil {
		return nil
	}
	return o.Monthly
}

func (o *Usd) GetHourly() *int64 {
	if o == nil {
		return nil
	}
	return o.Hourly
}

type Brl struct {
	Monthly *int64 `json:"monthly,omitempty"`
	Hourly  *int64 `json:"hourly,omitempty"`
}

func (o *Brl) GetMonthly() *int64 {
	if o == nil {
		return nil
	}
	return o.Monthly
}

func (o *Brl) GetHourly() *int64 {
	if o == nil {
		return nil
	}
	return o.Hourly
}

type Pricing struct {
	Usd *Usd `json:"usd,omitempty"`
	Brl *Brl `json:"brl,omitempty"`
}

func (o *Pricing) GetUsd() *Usd {
	if o == nil {
		return nil
	}
	return o.Usd
}

func (o *Pricing) GetBrl() *Brl {
	if o == nil {
		return nil
	}
	return o.Brl
}

type BandwidthPlanAttributes struct {
	Region    *string  `json:"region,omitempty"`
	Locations []string `json:"locations,omitempty"`
	Pricing   *Pricing `json:"pricing,omitempty"`
}

func (o *BandwidthPlanAttributes) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *BandwidthPlanAttributes) GetLocations() []string {
	if o == nil {
		return nil
	}
	return o.Locations
}

func (o *BandwidthPlanAttributes) GetPricing() *Pricing {
	if o == nil {
		return nil
	}
	return o.Pricing
}

type BandwidthPlan struct {
	ID         *string                  `json:"id,omitempty"`
	Type       *BandwidthPlanType       `json:"type,omitempty"`
	Attributes *BandwidthPlanAttributes `json:"attributes,omitempty"`
}

func (o *BandwidthPlan) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *BandwidthPlan) GetType() *BandwidthPlanType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *BandwidthPlan) GetAttributes() *BandwidthPlanAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
