// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type UserDataPropertiesType string

const (
	UserDataPropertiesTypeUserData UserDataPropertiesType = "user_data"
)

func (e UserDataPropertiesType) ToPointer() *UserDataPropertiesType {
	return &e
}
func (e *UserDataPropertiesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user_data":
		*e = UserDataPropertiesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserDataPropertiesType: %v", v)
	}
}

type UserDataPropertiesAttributes struct {
	// description of the User Data
	Description *string `json:"description,omitempty"`
	// content of the User Data
	Content   *string `json:"content,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

func (u *UserDataPropertiesAttributes) GetDescription() *string {
	if u == nil {
		return nil
	}
	return u.Description
}

func (u *UserDataPropertiesAttributes) GetContent() *string {
	if u == nil {
		return nil
	}
	return u.Content
}

func (u *UserDataPropertiesAttributes) GetCreatedAt() *string {
	if u == nil {
		return nil
	}
	return u.CreatedAt
}

func (u *UserDataPropertiesAttributes) GetUpdatedAt() *string {
	if u == nil {
		return nil
	}
	return u.UpdatedAt
}

type UserDataProperties struct {
	ID         *string                       `json:"id,omitempty"`
	Type       UserDataPropertiesType        `json:"type"`
	Attributes *UserDataPropertiesAttributes `json:"attributes,omitempty"`
}

func (u *UserDataProperties) GetID() *string {
	if u == nil {
		return nil
	}
	return u.ID
}

func (u *UserDataProperties) GetType() UserDataPropertiesType {
	if u == nil {
		return UserDataPropertiesType("")
	}
	return u.Type
}

func (u *UserDataProperties) GetAttributes() *UserDataPropertiesAttributes {
	if u == nil {
		return nil
	}
	return u.Attributes
}
