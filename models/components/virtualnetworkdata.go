// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VirtualNetworkDataType string

const (
	VirtualNetworkDataTypeVirtualNetworks VirtualNetworkDataType = "virtual_networks"
)

func (e VirtualNetworkDataType) ToPointer() *VirtualNetworkDataType {
	return &e
}
func (e *VirtualNetworkDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual_networks":
		*e = VirtualNetworkDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualNetworkDataType: %v", v)
	}
}

type VirtualNetworkDataSite struct {
	ID       *string `json:"id,omitempty"`
	Facility *string `json:"facility,omitempty"`
	Name     *string `json:"name,omitempty"`
	Slug     *string `json:"slug,omitempty"`
}

func (o *VirtualNetworkDataSite) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualNetworkDataSite) GetFacility() *string {
	if o == nil {
		return nil
	}
	return o.Facility
}

func (o *VirtualNetworkDataSite) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *VirtualNetworkDataSite) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type VirtualNetworkDataRegion struct {
	City    *string                 `json:"city,omitempty"`
	Country *string                 `json:"country,omitempty"`
	Site    *VirtualNetworkDataSite `json:"site,omitempty"`
}

func (o *VirtualNetworkDataRegion) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *VirtualNetworkDataRegion) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *VirtualNetworkDataRegion) GetSite() *VirtualNetworkDataSite {
	if o == nil {
		return nil
	}
	return o.Site
}

type VirtualNetworkDataAttributes struct {
	// vlan ID of the virtual network
	Vid *int64 `json:"vid,omitempty"`
	// Name of the virtual network
	Name *string `json:"name,omitempty"`
	// Description of the virtual network
	Description *string                   `json:"description,omitempty"`
	Region      *VirtualNetworkDataRegion `json:"region,omitempty"`
	// Amount of devices assigned to the virtual network
	AssignmentsCount *int64 `json:"assignments_count,omitempty"`
}

func (o *VirtualNetworkDataAttributes) GetVid() *int64 {
	if o == nil {
		return nil
	}
	return o.Vid
}

func (o *VirtualNetworkDataAttributes) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *VirtualNetworkDataAttributes) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *VirtualNetworkDataAttributes) GetRegion() *VirtualNetworkDataRegion {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *VirtualNetworkDataAttributes) GetAssignmentsCount() *int64 {
	if o == nil {
		return nil
	}
	return o.AssignmentsCount
}

type VirtualNetworkData struct {
	ID         *string                       `json:"id,omitempty"`
	Type       *VirtualNetworkDataType       `json:"type,omitempty"`
	Attributes *VirtualNetworkDataAttributes `json:"attributes,omitempty"`
}

func (o *VirtualNetworkData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *VirtualNetworkData) GetType() *VirtualNetworkDataType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *VirtualNetworkData) GetAttributes() *VirtualNetworkDataAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
