// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"time"
)

type VirtualNetworkDataType string

const (
	VirtualNetworkDataTypeVirtualNetworks VirtualNetworkDataType = "virtual_networks"
)

func (e VirtualNetworkDataType) ToPointer() *VirtualNetworkDataType {
	return &e
}
func (e *VirtualNetworkDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual_networks":
		*e = VirtualNetworkDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualNetworkDataType: %v", v)
	}
}

type VirtualNetworkDataSite struct {
	ID       *string `json:"id,omitempty"`
	Facility *string `json:"facility,omitempty"`
	Name     *string `json:"name,omitempty"`
	Slug     *string `json:"slug,omitempty"`
}

func (v *VirtualNetworkDataSite) GetID() *string {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *VirtualNetworkDataSite) GetFacility() *string {
	if v == nil {
		return nil
	}
	return v.Facility
}

func (v *VirtualNetworkDataSite) GetName() *string {
	if v == nil {
		return nil
	}
	return v.Name
}

func (v *VirtualNetworkDataSite) GetSlug() *string {
	if v == nil {
		return nil
	}
	return v.Slug
}

type VirtualNetworkDataRegion struct {
	City    *string                 `json:"city,omitempty"`
	Country *string                 `json:"country,omitempty"`
	Site    *VirtualNetworkDataSite `json:"site,omitempty"`
}

func (v *VirtualNetworkDataRegion) GetCity() *string {
	if v == nil {
		return nil
	}
	return v.City
}

func (v *VirtualNetworkDataRegion) GetCountry() *string {
	if v == nil {
		return nil
	}
	return v.Country
}

func (v *VirtualNetworkDataRegion) GetSite() *VirtualNetworkDataSite {
	if v == nil {
		return nil
	}
	return v.Site
}

type Tags struct {
	ID          *string `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Color       *string `json:"color,omitempty"`
}

func (t *Tags) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *Tags) GetName() *string {
	if t == nil {
		return nil
	}
	return t.Name
}

func (t *Tags) GetDescription() *string {
	if t == nil {
		return nil
	}
	return t.Description
}

func (t *Tags) GetColor() *string {
	if t == nil {
		return nil
	}
	return t.Color
}

type VirtualNetworkDataAttributes struct {
	// vlan ID of the virtual network
	Vid *int64 `json:"vid,omitempty"`
	// Name of the virtual network
	Name *string `json:"name,omitempty"`
	// Description of the virtual network
	Description *string                   `json:"description,omitempty"`
	Region      *VirtualNetworkDataRegion `json:"region,omitempty"`
	CreatedAt   *time.Time                `json:"created_at,omitempty"`
	// Amount of devices assigned to the virtual network
	AssignmentsCount *int64          `json:"assignments_count,omitempty"`
	Project          *ProjectInclude `json:"project,omitempty"`
	// Tags associated with the virtual network
	Tags []Tags `json:"tags,omitempty"`
}

func (v VirtualNetworkDataAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *VirtualNetworkDataAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *VirtualNetworkDataAttributes) GetVid() *int64 {
	if v == nil {
		return nil
	}
	return v.Vid
}

func (v *VirtualNetworkDataAttributes) GetName() *string {
	if v == nil {
		return nil
	}
	return v.Name
}

func (v *VirtualNetworkDataAttributes) GetDescription() *string {
	if v == nil {
		return nil
	}
	return v.Description
}

func (v *VirtualNetworkDataAttributes) GetRegion() *VirtualNetworkDataRegion {
	if v == nil {
		return nil
	}
	return v.Region
}

func (v *VirtualNetworkDataAttributes) GetCreatedAt() *time.Time {
	if v == nil {
		return nil
	}
	return v.CreatedAt
}

func (v *VirtualNetworkDataAttributes) GetAssignmentsCount() *int64 {
	if v == nil {
		return nil
	}
	return v.AssignmentsCount
}

func (v *VirtualNetworkDataAttributes) GetProject() *ProjectInclude {
	if v == nil {
		return nil
	}
	return v.Project
}

func (v *VirtualNetworkDataAttributes) GetTags() []Tags {
	if v == nil {
		return nil
	}
	return v.Tags
}

type VirtualNetworkData struct {
	ID         *string                       `json:"id,omitempty"`
	Type       *VirtualNetworkDataType       `json:"type,omitempty"`
	Attributes *VirtualNetworkDataAttributes `json:"attributes,omitempty"`
}

func (v *VirtualNetworkData) GetID() *string {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *VirtualNetworkData) GetType() *VirtualNetworkDataType {
	if v == nil {
		return nil
	}
	return v.Type
}

func (v *VirtualNetworkData) GetAttributes() *VirtualNetworkDataAttributes {
	if v == nil {
		return nil
	}
	return v.Attributes
}
