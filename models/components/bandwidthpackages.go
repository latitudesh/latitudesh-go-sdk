// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type BandwidthPackagesType string

const (
	BandwidthPackagesTypeBandwidthPackages BandwidthPackagesType = "bandwidth_packages"
)

func (e BandwidthPackagesType) ToPointer() *BandwidthPackagesType {
	return &e
}
func (e *BandwidthPackagesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bandwidth_packages":
		*e = BandwidthPackagesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BandwidthPackagesType: %v", v)
	}
}

type BandwidthPackagesProject struct {
	ID   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

func (o *BandwidthPackagesProject) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *BandwidthPackagesProject) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BandwidthPackagesProject) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

type Packages struct {
	RegionSlug *string  `json:"region_slug,omitempty"`
	Currency   *string  `json:"currency,omitempty"`
	UnitPrice  *float64 `json:"unit_price,omitempty"`
	Contracted *int64   `json:"contracted,omitempty"`
	TotalPrice *float64 `json:"total_price,omitempty"`
}

func (o *Packages) GetRegionSlug() *string {
	if o == nil {
		return nil
	}
	return o.RegionSlug
}

func (o *Packages) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *Packages) GetUnitPrice() *float64 {
	if o == nil {
		return nil
	}
	return o.UnitPrice
}

func (o *Packages) GetContracted() *int64 {
	if o == nil {
		return nil
	}
	return o.Contracted
}

func (o *Packages) GetTotalPrice() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalPrice
}

type BandwidthPackagesAttributes struct {
	Project  *BandwidthPackagesProject `json:"project,omitempty"`
	Packages []Packages                `json:"packages,omitempty"`
}

func (o *BandwidthPackagesAttributes) GetProject() *BandwidthPackagesProject {
	if o == nil {
		return nil
	}
	return o.Project
}

func (o *BandwidthPackagesAttributes) GetPackages() []Packages {
	if o == nil {
		return nil
	}
	return o.Packages
}

type BandwidthPackages struct {
	Type       *BandwidthPackagesType       `json:"type,omitempty"`
	Attributes *BandwidthPackagesAttributes `json:"attributes,omitempty"`
}

func (o *BandwidthPackages) GetType() *BandwidthPackagesType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *BandwidthPackages) GetAttributes() *BandwidthPackagesAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}
