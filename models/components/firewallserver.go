// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type FirewallServerType string

const (
	FirewallServerTypeFirewallServers FirewallServerType = "firewall_servers"
)

func (e FirewallServerType) ToPointer() *FirewallServerType {
	return &e
}
func (e *FirewallServerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "firewall_servers":
		*e = FirewallServerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FirewallServerType: %v", v)
	}
}

type FirewallServerAttributes struct {
	ServerID   *string `json:"server_id,omitempty"`
	FirewallID *string `json:"firewall_id,omitempty"`
}

func (f *FirewallServerAttributes) GetServerID() *string {
	if f == nil {
		return nil
	}
	return f.ServerID
}

func (f *FirewallServerAttributes) GetFirewallID() *string {
	if f == nil {
		return nil
	}
	return f.FirewallID
}

type FirewallServer struct {
	ID         *string                   `json:"id,omitempty"`
	Type       *FirewallServerType       `json:"type,omitempty"`
	Attributes *FirewallServerAttributes `json:"attributes,omitempty"`
}

func (f *FirewallServer) GetID() *string {
	if f == nil {
		return nil
	}
	return f.ID
}

func (f *FirewallServer) GetType() *FirewallServerType {
	if f == nil {
		return nil
	}
	return f.Type
}

func (f *FirewallServer) GetAttributes() *FirewallServerAttributes {
	if f == nil {
		return nil
	}
	return f.Attributes
}
