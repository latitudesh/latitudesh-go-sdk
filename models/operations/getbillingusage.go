// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetBillingUsageRequest struct {
	// Allows to filter the billing usage for specific products. It accepts an array of product ids.
	//
	FilterProducts []string `queryParam:"style=form,explode=true,name=filter[products][]"`
	// Accepts a plan name and allows to filter the usage for that plan.
	//
	FilterPlan    *string `queryParam:"style=form,explode=true,name=filter[plan]"`
	FilterProject string  `queryParam:"style=form,explode=true,name=filter[project]"`
}

func (g *GetBillingUsageRequest) GetFilterProducts() []string {
	if g == nil {
		return nil
	}
	return g.FilterProducts
}

func (g *GetBillingUsageRequest) GetFilterPlan() *string {
	if g == nil {
		return nil
	}
	return g.FilterPlan
}

func (g *GetBillingUsageRequest) GetFilterProject() string {
	if g == nil {
		return ""
	}
	return g.FilterProject
}

type GetBillingUsageResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	BillingUsage *components.BillingUsage
}

func (g *GetBillingUsageResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetBillingUsageResponse) GetBillingUsage() *components.BillingUsage {
	if g == nil {
		return nil
	}
	return g.BillingUsage
}
