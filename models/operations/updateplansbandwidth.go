// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type UpdatePlansBandwidthPlansType string

const (
	UpdatePlansBandwidthPlansTypeBandwidthPackages UpdatePlansBandwidthPlansType = "bandwidth_packages"
)

func (e UpdatePlansBandwidthPlansType) ToPointer() *UpdatePlansBandwidthPlansType {
	return &e
}
func (e *UpdatePlansBandwidthPlansType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bandwidth_packages":
		*e = UpdatePlansBandwidthPlansType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePlansBandwidthPlansType: %v", v)
	}
}

type UpdatePlansBandwidthPlansAttributes struct {
	// The project (ID or Slug) to add bandwidth
	Project *string `json:"project,omitempty"`
	// The total amount you want to have
	Quantity *int64 `json:"quantity,omitempty"`
	// The region to add bandwidth
	RegionSlug *string `json:"region_slug,omitempty"`
}

func (u *UpdatePlansBandwidthPlansAttributes) GetProject() *string {
	if u == nil {
		return nil
	}
	return u.Project
}

func (u *UpdatePlansBandwidthPlansAttributes) GetQuantity() *int64 {
	if u == nil {
		return nil
	}
	return u.Quantity
}

func (u *UpdatePlansBandwidthPlansAttributes) GetRegionSlug() *string {
	if u == nil {
		return nil
	}
	return u.RegionSlug
}

type UpdatePlansBandwidthPlansData struct {
	Type       *UpdatePlansBandwidthPlansType       `json:"type,omitempty"`
	Attributes *UpdatePlansBandwidthPlansAttributes `json:"attributes,omitempty"`
}

func (u *UpdatePlansBandwidthPlansData) GetType() *UpdatePlansBandwidthPlansType {
	if u == nil {
		return nil
	}
	return u.Type
}

func (u *UpdatePlansBandwidthPlansData) GetAttributes() *UpdatePlansBandwidthPlansAttributes {
	if u == nil {
		return nil
	}
	return u.Attributes
}

type UpdatePlansBandwidthPlansRequestBody struct {
	Data *UpdatePlansBandwidthPlansData `json:"data,omitempty"`
}

func (u *UpdatePlansBandwidthPlansRequestBody) GetData() *UpdatePlansBandwidthPlansData {
	if u == nil {
		return nil
	}
	return u.Data
}

type UpdatePlansBandwidthResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	BandwidthPackages *components.BandwidthPackages
}

func (u *UpdatePlansBandwidthResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdatePlansBandwidthResponse) GetBandwidthPackages() *components.BandwidthPackages {
	if u == nil {
		return nil
	}
	return u.BandwidthPackages
}
