// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type PostProjectUserDataUserDataType string

const (
	PostProjectUserDataUserDataTypeUserData PostProjectUserDataUserDataType = "user_data"
)

func (e PostProjectUserDataUserDataType) ToPointer() *PostProjectUserDataUserDataType {
	return &e
}
func (e *PostProjectUserDataUserDataType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user_data":
		*e = PostProjectUserDataUserDataType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostProjectUserDataUserDataType: %v", v)
	}
}

type PostProjectUserDataUserDataAttributes struct {
	// description of the User Data
	Description string `json:"description"`
	// base64 encoded content of the User Data
	Content string `json:"content"`
}

func (o *PostProjectUserDataUserDataAttributes) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *PostProjectUserDataUserDataAttributes) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

type PostProjectUserDataUserDataData struct {
	Type       PostProjectUserDataUserDataType        `json:"type"`
	Attributes *PostProjectUserDataUserDataAttributes `json:"attributes,omitempty"`
}

func (o *PostProjectUserDataUserDataData) GetType() PostProjectUserDataUserDataType {
	if o == nil {
		return PostProjectUserDataUserDataType("")
	}
	return o.Type
}

func (o *PostProjectUserDataUserDataData) GetAttributes() *PostProjectUserDataUserDataAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type PostProjectUserDataUserDataRequestBody struct {
	Data PostProjectUserDataUserDataData `json:"data"`
}

func (o *PostProjectUserDataUserDataRequestBody) GetData() PostProjectUserDataUserDataData {
	if o == nil {
		return PostProjectUserDataUserDataData{}
	}
	return o.Data
}

type PostProjectUserDataRequest struct {
	// Project ID or Slug
	ProjectID   string                                 `pathParam:"style=simple,explode=false,name=project_id"`
	RequestBody PostProjectUserDataUserDataRequestBody `request:"mediaType=application/json"`
}

func (o *PostProjectUserDataRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *PostProjectUserDataRequest) GetRequestBody() PostProjectUserDataUserDataRequestBody {
	if o == nil {
		return PostProjectUserDataUserDataRequestBody{}
	}
	return o.RequestBody
}

type PostProjectUserDataResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	UserData *components.UserData
}

func (o *PostProjectUserDataResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *PostProjectUserDataResponse) GetUserData() *components.UserData {
	if o == nil {
		return nil
	}
	return o.UserData
}
