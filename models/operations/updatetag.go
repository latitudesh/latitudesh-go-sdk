// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type UpdateTagTagsType string

const (
	UpdateTagTagsTypeTags UpdateTagTagsType = "tags"
)

func (e UpdateTagTagsType) ToPointer() *UpdateTagTagsType {
	return &e
}
func (e *UpdateTagTagsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tags":
		*e = UpdateTagTagsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateTagTagsType: %v", v)
	}
}

type UpdateTagTagsAttributes struct {
	// Name of the Tag
	Name *string `json:"name,omitempty"`
	// Description of the Tag
	Description *string `json:"description,omitempty"`
	// Color of the Tag
	Color *string `default:"#ffffff" json:"color"`
}

func (u UpdateTagTagsAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateTagTagsAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (u *UpdateTagTagsAttributes) GetName() *string {
	if u == nil {
		return nil
	}
	return u.Name
}

func (u *UpdateTagTagsAttributes) GetDescription() *string {
	if u == nil {
		return nil
	}
	return u.Description
}

func (u *UpdateTagTagsAttributes) GetColor() *string {
	if u == nil {
		return nil
	}
	return u.Color
}

type UpdateTagTagsData struct {
	ID         *string                  `json:"id,omitempty"`
	Type       *UpdateTagTagsType       `json:"type,omitempty"`
	Attributes *UpdateTagTagsAttributes `json:"attributes,omitempty"`
}

func (u *UpdateTagTagsData) GetID() *string {
	if u == nil {
		return nil
	}
	return u.ID
}

func (u *UpdateTagTagsData) GetType() *UpdateTagTagsType {
	if u == nil {
		return nil
	}
	return u.Type
}

func (u *UpdateTagTagsData) GetAttributes() *UpdateTagTagsAttributes {
	if u == nil {
		return nil
	}
	return u.Attributes
}

type UpdateTagTagsRequestBody struct {
	Data *UpdateTagTagsData `json:"data,omitempty"`
}

func (u *UpdateTagTagsRequestBody) GetData() *UpdateTagTagsData {
	if u == nil {
		return nil
	}
	return u.Data
}

type UpdateTagRequest struct {
	TagID       string                   `pathParam:"style=simple,explode=false,name=tag_id"`
	RequestBody UpdateTagTagsRequestBody `request:"mediaType=application/json"`
}

func (u *UpdateTagRequest) GetTagID() string {
	if u == nil {
		return ""
	}
	return u.TagID
}

func (u *UpdateTagRequest) GetRequestBody() UpdateTagTagsRequestBody {
	if u == nil {
		return UpdateTagTagsRequestBody{}
	}
	return u.RequestBody
}

type UpdateTagResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	CustomTag *components.CustomTag
}

func (u *UpdateTagResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdateTagResponse) GetCustomTag() *components.CustomTag {
	if u == nil {
		return nil
	}
	return u.CustomTag
}
