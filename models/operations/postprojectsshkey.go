// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type PostProjectSSHKeyProjectsSSHKeysType string

const (
	PostProjectSSHKeyProjectsSSHKeysTypeSSHKeys PostProjectSSHKeyProjectsSSHKeysType = "ssh_keys"
)

func (e PostProjectSSHKeyProjectsSSHKeysType) ToPointer() *PostProjectSSHKeyProjectsSSHKeysType {
	return &e
}
func (e *PostProjectSSHKeyProjectsSSHKeysType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ssh_keys":
		*e = PostProjectSSHKeyProjectsSSHKeysType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostProjectSSHKeyProjectsSSHKeysType: %v", v)
	}
}

type PostProjectSSHKeyProjectsSSHKeysAttributes struct {
	// Name of the SSH Key
	Name *string `json:"name,omitempty"`
	// SSH Public Key
	PublicKey *string `json:"public_key,omitempty"`
}

func (p *PostProjectSSHKeyProjectsSSHKeysAttributes) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PostProjectSSHKeyProjectsSSHKeysAttributes) GetPublicKey() *string {
	if p == nil {
		return nil
	}
	return p.PublicKey
}

type PostProjectSSHKeyProjectsSSHKeysData struct {
	Type       PostProjectSSHKeyProjectsSSHKeysType        `json:"type"`
	Attributes *PostProjectSSHKeyProjectsSSHKeysAttributes `json:"attributes,omitempty"`
}

func (p *PostProjectSSHKeyProjectsSSHKeysData) GetType() PostProjectSSHKeyProjectsSSHKeysType {
	if p == nil {
		return PostProjectSSHKeyProjectsSSHKeysType("")
	}
	return p.Type
}

func (p *PostProjectSSHKeyProjectsSSHKeysData) GetAttributes() *PostProjectSSHKeyProjectsSSHKeysAttributes {
	if p == nil {
		return nil
	}
	return p.Attributes
}

type PostProjectSSHKeyProjectsSSHKeysRequestBody struct {
	Data PostProjectSSHKeyProjectsSSHKeysData `json:"data"`
}

func (p *PostProjectSSHKeyProjectsSSHKeysRequestBody) GetData() PostProjectSSHKeyProjectsSSHKeysData {
	if p == nil {
		return PostProjectSSHKeyProjectsSSHKeysData{}
	}
	return p.Data
}

type PostProjectSSHKeyRequest struct {
	// Project ID or Slug
	ProjectID   string                                      `pathParam:"style=simple,explode=false,name=project_id"`
	RequestBody PostProjectSSHKeyProjectsSSHKeysRequestBody `request:"mediaType=application/json"`
}

func (p *PostProjectSSHKeyRequest) GetProjectID() string {
	if p == nil {
		return ""
	}
	return p.ProjectID
}

func (p *PostProjectSSHKeyRequest) GetRequestBody() PostProjectSSHKeyProjectsSSHKeysRequestBody {
	if p == nil {
		return PostProjectSSHKeyProjectsSSHKeysRequestBody{}
	}
	return p.RequestBody
}

// PostProjectSSHKeyResponseBody - Created
type PostProjectSSHKeyResponseBody struct {
	Data *components.SSHKeyData `json:"data,omitempty"`
}

func (p *PostProjectSSHKeyResponseBody) GetData() *components.SSHKeyData {
	if p == nil {
		return nil
	}
	return p.Data
}

type PostProjectSSHKeyResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	Object *PostProjectSSHKeyResponseBody
}

func (p *PostProjectSSHKeyResponse) GetHTTPMeta() components.HTTPMetadata {
	if p == nil {
		return components.HTTPMetadata{}
	}
	return p.HTTPMeta
}

func (p *PostProjectSSHKeyResponse) GetObject() *PostProjectSSHKeyResponseBody {
	if p == nil {
		return nil
	}
	return p.Object
}
