// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type PatchStorageBlocksStorageType string

const (
	PatchStorageBlocksStorageTypeStorageBlocks PatchStorageBlocksStorageType = "storage_blocks"
)

func (e PatchStorageBlocksStorageType) ToPointer() *PatchStorageBlocksStorageType {
	return &e
}
func (e *PatchStorageBlocksStorageType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "storage_blocks":
		*e = PatchStorageBlocksStorageType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchStorageBlocksStorageType: %v", v)
	}
}

type PatchStorageBlocksStorageAttributes struct {
	// Size in GB (not required, default is 1500)
	SizeInGb *int64 `default:"1500" json:"size_in_gb"`
}

func (p PatchStorageBlocksStorageAttributes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchStorageBlocksStorageAttributes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (p *PatchStorageBlocksStorageAttributes) GetSizeInGb() *int64 {
	if p == nil {
		return nil
	}
	return p.SizeInGb
}

type PatchStorageBlocksStorageData struct {
	// Block Storage ID
	ID         string                              `json:"id"`
	Type       PatchStorageBlocksStorageType       `json:"type"`
	Attributes PatchStorageBlocksStorageAttributes `json:"attributes"`
}

func (p *PatchStorageBlocksStorageData) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PatchStorageBlocksStorageData) GetType() PatchStorageBlocksStorageType {
	if p == nil {
		return PatchStorageBlocksStorageType("")
	}
	return p.Type
}

func (p *PatchStorageBlocksStorageData) GetAttributes() PatchStorageBlocksStorageAttributes {
	if p == nil {
		return PatchStorageBlocksStorageAttributes{}
	}
	return p.Attributes
}

type PatchStorageBlocksStorageRequestBody struct {
	Data PatchStorageBlocksStorageData `json:"data"`
}

func (p *PatchStorageBlocksStorageRequestBody) GetData() PatchStorageBlocksStorageData {
	if p == nil {
		return PatchStorageBlocksStorageData{}
	}
	return p.Data
}

type PatchStorageBlocksRequest struct {
	BlockID     string                               `pathParam:"style=simple,explode=false,name=block_id"`
	RequestBody PatchStorageBlocksStorageRequestBody `request:"mediaType=application/json"`
}

func (p *PatchStorageBlocksRequest) GetBlockID() string {
	if p == nil {
		return ""
	}
	return p.BlockID
}

func (p *PatchStorageBlocksRequest) GetRequestBody() PatchStorageBlocksStorageRequestBody {
	if p == nil {
		return PatchStorageBlocksStorageRequestBody{}
	}
	return p.RequestBody
}

type PatchStorageBlocksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (p *PatchStorageBlocksResponse) GetHTTPMeta() components.HTTPMetadata {
	if p == nil {
		return components.HTTPMetadata{}
	}
	return p.HTTPMeta
}
