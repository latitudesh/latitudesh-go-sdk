// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type PostSSHKeySSHKeysType string

const (
	PostSSHKeySSHKeysTypeSSHKeys PostSSHKeySSHKeysType = "ssh_keys"
)

func (e PostSSHKeySSHKeysType) ToPointer() *PostSSHKeySSHKeysType {
	return &e
}
func (e *PostSSHKeySSHKeysType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ssh_keys":
		*e = PostSSHKeySSHKeysType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSSHKeySSHKeysType: %v", v)
	}
}

type PostSSHKeySSHKeysAttributes struct {
	// Name of the SSH Key
	Name *string `json:"name,omitempty"`
	// SSH Public Key
	PublicKey *string `json:"public_key,omitempty"`
}

func (p *PostSSHKeySSHKeysAttributes) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PostSSHKeySSHKeysAttributes) GetPublicKey() *string {
	if p == nil {
		return nil
	}
	return p.PublicKey
}

type PostSSHKeySSHKeysData struct {
	Type       PostSSHKeySSHKeysType        `json:"type"`
	Attributes *PostSSHKeySSHKeysAttributes `json:"attributes,omitempty"`
}

func (p *PostSSHKeySSHKeysData) GetType() PostSSHKeySSHKeysType {
	if p == nil {
		return PostSSHKeySSHKeysType("")
	}
	return p.Type
}

func (p *PostSSHKeySSHKeysData) GetAttributes() *PostSSHKeySSHKeysAttributes {
	if p == nil {
		return nil
	}
	return p.Attributes
}

type PostSSHKeySSHKeysRequestBody struct {
	Data PostSSHKeySSHKeysData `json:"data"`
}

func (p *PostSSHKeySSHKeysRequestBody) GetData() PostSSHKeySSHKeysData {
	if p == nil {
		return PostSSHKeySSHKeysData{}
	}
	return p.Data
}

// PostSSHKeyResponseBody - Created
type PostSSHKeyResponseBody struct {
	Data *components.SSHKeyData `json:"data,omitempty"`
}

func (p *PostSSHKeyResponseBody) GetData() *components.SSHKeyData {
	if p == nil {
		return nil
	}
	return p.Data
}

type PostSSHKeyResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	Object *PostSSHKeyResponseBody
}

func (p *PostSSHKeyResponse) GetHTTPMeta() components.HTTPMetadata {
	if p == nil {
		return components.HTTPMetadata{}
	}
	return p.HTTPMeta
}

func (p *PostSSHKeyResponse) GetObject() *PostSSHKeyResponseBody {
	if p == nil {
		return nil
	}
	return p.Object
}
