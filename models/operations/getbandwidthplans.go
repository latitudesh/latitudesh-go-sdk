// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetBandwidthPlansRequest struct {
	APIVersion *string `default:"2023-06-01" header:"style=simple,explode=false,name=API-Version"`
	// The plan ID to filter by
	FilterID *string `queryParam:"style=form,explode=true,name=filter[id]"`
	// Number of items to return per page
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page[size]"`
	// Page number to return (starts at 1)
	PageNumber *int64 `default:"1" queryParam:"style=form,explode=true,name=page[number]"`
}

func (g GetBandwidthPlansRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetBandwidthPlansRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (g *GetBandwidthPlansRequest) GetAPIVersion() *string {
	if g == nil {
		return nil
	}
	return g.APIVersion
}

func (g *GetBandwidthPlansRequest) GetFilterID() *string {
	if g == nil {
		return nil
	}
	return g.FilterID
}

func (g *GetBandwidthPlansRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GetBandwidthPlansRequest) GetPageNumber() *int64 {
	if g == nil {
		return nil
	}
	return g.PageNumber
}

type GetBandwidthPlansResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	BandwidthPlans *components.BandwidthPlans

	Next func() (*GetBandwidthPlansResponse, error)
}

func (g *GetBandwidthPlansResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetBandwidthPlansResponse) GetBandwidthPlans() *components.BandwidthPlans {
	if g == nil {
		return nil
	}
	return g.BandwidthPlans
}
