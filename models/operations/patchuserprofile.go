// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type PatchUserProfileUserProfileType string

const (
	PatchUserProfileUserProfileTypeUsers PatchUserProfileUserProfileType = "users"
)

func (e PatchUserProfileUserProfileType) ToPointer() *PatchUserProfileUserProfileType {
	return &e
}
func (e *PatchUserProfileUserProfileType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "users":
		*e = PatchUserProfileUserProfileType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchUserProfileUserProfileType: %v", v)
	}
}

type PatchUserProfileUserProfileRole string

const (
	PatchUserProfileUserProfileRoleAdministrator PatchUserProfileUserProfileRole = "administrator"
	PatchUserProfileUserProfileRoleBilling       PatchUserProfileUserProfileRole = "billing"
	PatchUserProfileUserProfileRoleCollaborator  PatchUserProfileUserProfileRole = "collaborator"
	PatchUserProfileUserProfileRoleOwner         PatchUserProfileUserProfileRole = "owner"
)

func (e PatchUserProfileUserProfileRole) ToPointer() *PatchUserProfileUserProfileRole {
	return &e
}
func (e *PatchUserProfileUserProfileRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "administrator":
		fallthrough
	case "billing":
		fallthrough
	case "collaborator":
		fallthrough
	case "owner":
		*e = PatchUserProfileUserProfileRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchUserProfileUserProfileRole: %v", v)
	}
}

type PatchUserProfileUserProfileAttributes struct {
	FirstName *string                          `json:"first_name,omitempty"`
	LastName  *string                          `json:"last_name,omitempty"`
	Role      *PatchUserProfileUserProfileRole `json:"role,omitempty"`
}

func (o *PatchUserProfileUserProfileAttributes) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *PatchUserProfileUserProfileAttributes) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *PatchUserProfileUserProfileAttributes) GetRole() *PatchUserProfileUserProfileRole {
	if o == nil {
		return nil
	}
	return o.Role
}

type PatchUserProfileUserProfileData struct {
	ID         string                                 `json:"id"`
	Type       PatchUserProfileUserProfileType        `json:"type"`
	Attributes *PatchUserProfileUserProfileAttributes `json:"attributes,omitempty"`
}

func (o *PatchUserProfileUserProfileData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PatchUserProfileUserProfileData) GetType() PatchUserProfileUserProfileType {
	if o == nil {
		return PatchUserProfileUserProfileType("")
	}
	return o.Type
}

func (o *PatchUserProfileUserProfileData) GetAttributes() *PatchUserProfileUserProfileAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type PatchUserProfileUserProfileRequestBody struct {
	Data PatchUserProfileUserProfileData `json:"data"`
}

func (o *PatchUserProfileUserProfileRequestBody) GetData() PatchUserProfileUserProfileData {
	if o == nil {
		return PatchUserProfileUserProfileData{}
	}
	return o.Data
}

type PatchUserProfileRequest struct {
	ID          string                                 `pathParam:"style=simple,explode=false,name=id"`
	RequestBody PatchUserProfileUserProfileRequestBody `request:"mediaType=application/json"`
}

func (o *PatchUserProfileRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PatchUserProfileRequest) GetRequestBody() PatchUserProfileUserProfileRequestBody {
	if o == nil {
		return PatchUserProfileUserProfileRequestBody{}
	}
	return o.RequestBody
}

// PatchUserProfileResponseBody - Success
type PatchUserProfileResponseBody struct {
	Data *components.UserUpdate `json:"data,omitempty"`
}

func (o *PatchUserProfileResponseBody) GetData() *components.UserUpdate {
	if o == nil {
		return nil
	}
	return o.Data
}

type PatchUserProfileResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *PatchUserProfileResponseBody
}

func (o *PatchUserProfileResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *PatchUserProfileResponse) GetObject() *PatchUserProfileResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
