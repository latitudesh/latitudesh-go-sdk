// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type CreateServerActionServersType string

const (
	CreateServerActionServersTypeActions CreateServerActionServersType = "actions"
)

func (e CreateServerActionServersType) ToPointer() *CreateServerActionServersType {
	return &e
}
func (e *CreateServerActionServersType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "actions":
		*e = CreateServerActionServersType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateServerActionServersType: %v", v)
	}
}

// CreateServerActionAction - The action to perform on the server
type CreateServerActionAction string

const (
	CreateServerActionActionPowerOn  CreateServerActionAction = "power_on"
	CreateServerActionActionPowerOff CreateServerActionAction = "power_off"
	CreateServerActionActionReboot   CreateServerActionAction = "reboot"
)

func (e CreateServerActionAction) ToPointer() *CreateServerActionAction {
	return &e
}
func (e *CreateServerActionAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "power_on":
		fallthrough
	case "power_off":
		fallthrough
	case "reboot":
		*e = CreateServerActionAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateServerActionAction: %v", v)
	}
}

type CreateServerActionServersAttributes struct {
	// The action to perform on the server
	Action CreateServerActionAction `json:"action"`
}

func (o *CreateServerActionServersAttributes) GetAction() CreateServerActionAction {
	if o == nil {
		return CreateServerActionAction("")
	}
	return o.Action
}

type CreateServerActionServersData struct {
	Type       CreateServerActionServersType        `json:"type"`
	Attributes *CreateServerActionServersAttributes `json:"attributes,omitempty"`
}

func (o *CreateServerActionServersData) GetType() CreateServerActionServersType {
	if o == nil {
		return CreateServerActionServersType("")
	}
	return o.Type
}

func (o *CreateServerActionServersData) GetAttributes() *CreateServerActionServersAttributes {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type CreateServerActionServersRequestBody struct {
	Data CreateServerActionServersData `json:"data"`
}

func (o *CreateServerActionServersRequestBody) GetData() CreateServerActionServersData {
	if o == nil {
		return CreateServerActionServersData{}
	}
	return o.Data
}

type CreateServerActionRequest struct {
	ServerID    string                               `pathParam:"style=simple,explode=false,name=server_id"`
	RequestBody CreateServerActionServersRequestBody `request:"mediaType=application/json"`
}

func (o *CreateServerActionRequest) GetServerID() string {
	if o == nil {
		return ""
	}
	return o.ServerID
}

func (o *CreateServerActionRequest) GetRequestBody() CreateServerActionServersRequestBody {
	if o == nil {
		return CreateServerActionServersRequestBody{}
	}
	return o.RequestBody
}

type CreateServerActionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	ServerAction *components.ServerAction
}

func (o *CreateServerActionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateServerActionResponse) GetServerAction() *components.ServerAction {
	if o == nil {
		return nil
	}
	return o.ServerAction
}
