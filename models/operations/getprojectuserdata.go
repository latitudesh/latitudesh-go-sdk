// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetProjectUserDataRequest struct {
	// Project ID or Slug
	ProjectID  string `pathParam:"style=simple,explode=false,name=project_id"`
	UserDataID string `pathParam:"style=simple,explode=false,name=user_data_id"`
	// The `decoded_content` is provided as an extra attribute that shows content in decoded form.
	ExtraFieldsUserData *string `default:"decoded_content" queryParam:"style=form,explode=true,name=extra_fields[user_data]"`
}

func (g GetProjectUserDataRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetProjectUserDataRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetProjectUserDataRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetProjectUserDataRequest) GetUserDataID() string {
	if o == nil {
		return ""
	}
	return o.UserDataID
}

func (o *GetProjectUserDataRequest) GetExtraFieldsUserData() *string {
	if o == nil {
		return nil
	}
	return o.ExtraFieldsUserData
}

type GetProjectUserDataResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	UserData *components.UserData
}

func (o *GetProjectUserDataResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetProjectUserDataResponse) GetUserData() *components.UserData {
	if o == nil {
		return nil
	}
	return o.UserData
}
