// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetProjectsRequest struct {
	// The project name to filter by
	FilterName *string `queryParam:"style=form,explode=true,name=filter[name]"`
	// The project slug to filter by
	FilterSlug *string `queryParam:"style=form,explode=true,name=filter[slug]"`
	// The project description to filter by
	FilterDescription *string `queryParam:"style=form,explode=true,name=filter[description]"`
	// The billing type to filter by
	FilterBillingType *string `queryParam:"style=form,explode=true,name=filter[billing_type]"`
	// The environment to filter by
	FilterEnvironment *string `queryParam:"style=form,explode=true,name=filter[environment]"`
	// The tags ids to filter by, separated by comma, e.g. `filter[tags]=tag_1,tag_2`will return projects with `tag_1` AND `tag_2`
	FilterTags *string `queryParam:"style=form,explode=true,name=filter[tags]"`
	// The `last_renewal_date` and `next_renewal_date` are provided as extra attributes that show previous and future billing cycle dates. To request it, just set `extra_fields[projects]=last_renewal_date,next_renewal_date` in the query string.
	ExtraFieldsProjects *string `queryParam:"style=form,explode=true,name=extra_fields[projects]"`
	// Number of items to return per page
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page[size]"`
	// Page number to return (starts at 1)
	PageNumber *int64 `default:"1" queryParam:"style=form,explode=true,name=page[number]"`
}

func (g GetProjectsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetProjectsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (g *GetProjectsRequest) GetFilterName() *string {
	if g == nil {
		return nil
	}
	return g.FilterName
}

func (g *GetProjectsRequest) GetFilterSlug() *string {
	if g == nil {
		return nil
	}
	return g.FilterSlug
}

func (g *GetProjectsRequest) GetFilterDescription() *string {
	if g == nil {
		return nil
	}
	return g.FilterDescription
}

func (g *GetProjectsRequest) GetFilterBillingType() *string {
	if g == nil {
		return nil
	}
	return g.FilterBillingType
}

func (g *GetProjectsRequest) GetFilterEnvironment() *string {
	if g == nil {
		return nil
	}
	return g.FilterEnvironment
}

func (g *GetProjectsRequest) GetFilterTags() *string {
	if g == nil {
		return nil
	}
	return g.FilterTags
}

func (g *GetProjectsRequest) GetExtraFieldsProjects() *string {
	if g == nil {
		return nil
	}
	return g.ExtraFieldsProjects
}

func (g *GetProjectsRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GetProjectsRequest) GetPageNumber() *int64 {
	if g == nil {
		return nil
	}
	return g.PageNumber
}

type GetProjectsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Projects *components.Projects

	Next func() (*GetProjectsResponse, error)
}

func (g *GetProjectsResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetProjectsResponse) GetProjects() *components.Projects {
	if g == nil {
		return nil
	}
	return g.Projects
}
