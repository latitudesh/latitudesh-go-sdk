// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetVirtualNetworksRequest struct {
	// The location slug to filter by
	FilterLocation *string `queryParam:"style=form,explode=true,name=filter[location]"`
	// The project id or slug to filter by
	FilterProject *string `queryParam:"style=form,explode=true,name=filter[project]"`
	// The tags ids to filter by, separated by comma, e.g. `filter[tags]=tag_1,tag_2`will return ssh keys with `tag_1` AND `tag_2`
	FilterTags *string `queryParam:"style=form,explode=true,name=filter[tags]"`
}

func (o *GetVirtualNetworksRequest) GetFilterLocation() *string {
	if o == nil {
		return nil
	}
	return o.FilterLocation
}

func (o *GetVirtualNetworksRequest) GetFilterProject() *string {
	if o == nil {
		return nil
	}
	return o.FilterProject
}

func (o *GetVirtualNetworksRequest) GetFilterTags() *string {
	if o == nil {
		return nil
	}
	return o.FilterTags
}

type GetVirtualNetworksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List virtual networks filtered by tag
	VirtualNetworks *components.VirtualNetworks
}

func (o *GetVirtualNetworksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetVirtualNetworksResponse) GetVirtualNetworks() *components.VirtualNetworks {
	if o == nil {
		return nil
	}
	return o.VirtualNetworks
}
