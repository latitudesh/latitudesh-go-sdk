// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type CreateServerOutOfBandServersType string

const (
	CreateServerOutOfBandServersTypeOutOfBand CreateServerOutOfBandServersType = "out_of_band"
)

func (e CreateServerOutOfBandServersType) ToPointer() *CreateServerOutOfBandServersType {
	return &e
}
func (e *CreateServerOutOfBandServersType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "out_of_band":
		*e = CreateServerOutOfBandServersType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateServerOutOfBandServersType: %v", v)
	}
}

type CreateServerOutOfBandServersAttributes struct {
	// SSH Key ID to set for out of band
	SSHKeyID *string `json:"ssh_key_id,omitempty"`
}

func (c *CreateServerOutOfBandServersAttributes) GetSSHKeyID() *string {
	if c == nil {
		return nil
	}
	return c.SSHKeyID
}

type CreateServerOutOfBandServersData struct {
	Type       CreateServerOutOfBandServersType        `json:"type"`
	Attributes *CreateServerOutOfBandServersAttributes `json:"attributes,omitempty"`
}

func (c *CreateServerOutOfBandServersData) GetType() CreateServerOutOfBandServersType {
	if c == nil {
		return CreateServerOutOfBandServersType("")
	}
	return c.Type
}

func (c *CreateServerOutOfBandServersData) GetAttributes() *CreateServerOutOfBandServersAttributes {
	if c == nil {
		return nil
	}
	return c.Attributes
}

type CreateServerOutOfBandServersRequestBody struct {
	Data CreateServerOutOfBandServersData `json:"data"`
}

func (c *CreateServerOutOfBandServersRequestBody) GetData() CreateServerOutOfBandServersData {
	if c == nil {
		return CreateServerOutOfBandServersData{}
	}
	return c.Data
}

type CreateServerOutOfBandRequest struct {
	ServerID    string                                  `pathParam:"style=simple,explode=false,name=server_id"`
	RequestBody CreateServerOutOfBandServersRequestBody `request:"mediaType=application/json"`
}

func (c *CreateServerOutOfBandRequest) GetServerID() string {
	if c == nil {
		return ""
	}
	return c.ServerID
}

func (c *CreateServerOutOfBandRequest) GetRequestBody() CreateServerOutOfBandServersRequestBody {
	if c == nil {
		return CreateServerOutOfBandServersRequestBody{}
	}
	return c.RequestBody
}

type CreateServerOutOfBandResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Created
	OutOfBandConnection *components.OutOfBandConnection
}

func (c *CreateServerOutOfBandResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CreateServerOutOfBandResponse) GetOutOfBandConnection() *components.OutOfBandConnection {
	if c == nil {
		return nil
	}
	return c.OutOfBandConnection
}
