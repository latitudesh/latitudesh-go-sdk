// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/internal/utils"
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetServersRequest struct {
	// The project ID or Slug to filter by
	FilterProject *string `queryParam:"style=form,explode=true,name=filter[project]"`
	// The region Slug to filter by
	FilterRegion *string `queryParam:"style=form,explode=true,name=filter[region]"`
	// The hostname of server to filter by
	FilterHostname *string `queryParam:"style=form,explode=true,name=filter[hostname]"`
	// The created at greater than equal date to filter by
	FilterCreatedAtGte *string `queryParam:"style=form,explode=true,name=filter[created_at_gte]"`
	// The created at less than equal date to filter by
	FilterCreatedAtLte *string `queryParam:"style=form,explode=true,name=filter[created_at_lte]"`
	// The label of server to filter by
	FilterLabel *string `queryParam:"style=form,explode=true,name=filter[label]"`
	// The status of server to filter by
	FilterStatus *string `queryParam:"style=form,explode=true,name=filter[status]"`
	// The platform/plan name of the server to filter by
	FilterPlan *string `queryParam:"style=form,explode=true,name=filter[plan]"`
	// Filter by the existence of an associated GPU
	FilterGpu *bool `queryParam:"style=form,explode=true,name=filter[gpu]"`
	// Filter servers with RAM size (in GB) equals the provided value.
	FilterRAMEql *int64 `queryParam:"style=form,explode=true,name=filter[ram][eql]"`
	// Filter servers with RAM size (in GB) greater than or equal the provided value.
	FilterRAMGte *int64 `queryParam:"style=form,explode=true,name=filter[ram][gte]"`
	// Filter servers with RAM size (in GB) less than or equal the provided value.
	FilterRAMLte *int64 `queryParam:"style=form,explode=true,name=filter[ram][lte]"`
	// The disk size in Gigabytes to filter by, should be used with the following options:
	//                               [eql] to filter for values equal to the provided value.
	//                               [gte] to filter for values greater or equal to the provided value.
	//                               [lte] to filter by values lower or equal to the provided value.
	FilterDisk *int64 `queryParam:"style=form,explode=true,name=filter[disk]"`
	// The tags ids to filter by, separated by comma, e.g. `filter[tags]=tag_1,tag_2`will return servers with `tag_1` AND `tag_2`
	FilterTags *string `queryParam:"style=form,explode=true,name=filter[tags]"`
	// The `credentials` are provided as extra attributes that is lazy loaded. To request it, just set `extra_fields[servers]=credentials` in the query string.
	ExtraFieldsServers *string `queryParam:"style=form,explode=true,name=extra_fields[servers]"`
	// Number of items to return per page
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page[size]"`
	// Page number to return (starts at 1)
	PageNumber *int64 `default:"1" queryParam:"style=form,explode=true,name=page[number]"`
}

func (g GetServersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetServersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetServersRequest) GetFilterProject() *string {
	if o == nil {
		return nil
	}
	return o.FilterProject
}

func (o *GetServersRequest) GetFilterRegion() *string {
	if o == nil {
		return nil
	}
	return o.FilterRegion
}

func (o *GetServersRequest) GetFilterHostname() *string {
	if o == nil {
		return nil
	}
	return o.FilterHostname
}

func (o *GetServersRequest) GetFilterCreatedAtGte() *string {
	if o == nil {
		return nil
	}
	return o.FilterCreatedAtGte
}

func (o *GetServersRequest) GetFilterCreatedAtLte() *string {
	if o == nil {
		return nil
	}
	return o.FilterCreatedAtLte
}

func (o *GetServersRequest) GetFilterLabel() *string {
	if o == nil {
		return nil
	}
	return o.FilterLabel
}

func (o *GetServersRequest) GetFilterStatus() *string {
	if o == nil {
		return nil
	}
	return o.FilterStatus
}

func (o *GetServersRequest) GetFilterPlan() *string {
	if o == nil {
		return nil
	}
	return o.FilterPlan
}

func (o *GetServersRequest) GetFilterGpu() *bool {
	if o == nil {
		return nil
	}
	return o.FilterGpu
}

func (o *GetServersRequest) GetFilterRAMEql() *int64 {
	if o == nil {
		return nil
	}
	return o.FilterRAMEql
}

func (o *GetServersRequest) GetFilterRAMGte() *int64 {
	if o == nil {
		return nil
	}
	return o.FilterRAMGte
}

func (o *GetServersRequest) GetFilterRAMLte() *int64 {
	if o == nil {
		return nil
	}
	return o.FilterRAMLte
}

func (o *GetServersRequest) GetFilterDisk() *int64 {
	if o == nil {
		return nil
	}
	return o.FilterDisk
}

func (o *GetServersRequest) GetFilterTags() *string {
	if o == nil {
		return nil
	}
	return o.FilterTags
}

func (o *GetServersRequest) GetExtraFieldsServers() *string {
	if o == nil {
		return nil
	}
	return o.ExtraFieldsServers
}

func (o *GetServersRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *GetServersRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

type GetServersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Servers *components.Servers

	Next func() (*GetServersResponse, error)
}

func (o *GetServersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetServersResponse) GetServers() *components.Servers {
	if o == nil {
		return nil
	}
	return o.Servers
}
