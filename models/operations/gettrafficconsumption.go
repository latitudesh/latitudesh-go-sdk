// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/latitudesh/latitudesh-go-sdk/models/components"
)

type GetTrafficConsumptionRequest struct {
	// The server id to filter by
	FilterServer *string `queryParam:"style=form,explode=true,name=filter[server]"`
	// The project id to filter by
	FilterProject *string `queryParam:"style=form,explode=true,name=filter[project]"`
	// The start timestamp to retrieve the traffic. You must provide in ISO8601 format. Example: filter[date][gte]=2024-04-01T00:00:00Z
	FilterDateGte string `queryParam:"style=form,explode=true,name=filter[date][gte]"`
	// The end timestamp to retrieve the traffic. You must provide in ISO8601 format. Example: filter[date][gte]=2024-04-31T23:59:59Z
	FilterDateLte string `queryParam:"style=form,explode=true,name=filter[date][lte]"`
}

func (g *GetTrafficConsumptionRequest) GetFilterServer() *string {
	if g == nil {
		return nil
	}
	return g.FilterServer
}

func (g *GetTrafficConsumptionRequest) GetFilterProject() *string {
	if g == nil {
		return nil
	}
	return g.FilterProject
}

func (g *GetTrafficConsumptionRequest) GetFilterDateGte() string {
	if g == nil {
		return ""
	}
	return g.FilterDateGte
}

func (g *GetTrafficConsumptionRequest) GetFilterDateLte() string {
	if g == nil {
		return ""
	}
	return g.FilterDateLte
}

type GetTrafficConsumptionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Traffic *components.Traffic
}

func (g *GetTrafficConsumptionResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetTrafficConsumptionResponse) GetTraffic() *components.Traffic {
	if g == nil {
		return nil
	}
	return g.Traffic
}
